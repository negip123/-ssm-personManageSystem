<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.print.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.print.model.Message">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="qq" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="text" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="date" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, qq, text, date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <!-- 查询所有部门信息 -->
  <select id="selectAll"   resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from message
    order by id asc
  </select>
 <!--  带参查询 -->
  <select id="selectByLike"  resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from message
    where 1=1 
    <if test="id != null">
    	and  id like concat('%',#{id},'%')
    </if>
    <if test="qq != null">
    	and  qq like concat('%',#{qq},'%')
    </if>
    order by id asc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
<!--   批量删除 -->
  <delete id="batchDelete" parameterType="java.lang.Integer" flushCache="true">
  	delete from message
    	where id in 
    	<foreach item="item"  collection="array" open="(" separator="," close=")">
    		#{item}
    	</foreach>
</delete>
  
  <insert id="insert" parameterType="com.neuedu.print.model.Message">
    insert into message (id, qq, text, 
      date)
    values (#{id,jdbcType=INTEGER}, #{qq,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.print.model.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="date != null">
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.print.model.Message">
    update message
    <set>
      <if test="qq != null">
        qq = #{qq,jdbcType=INTEGER},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.print.model.Message">
    update message
    set qq = #{qq,jdbcType=INTEGER},
      text = #{text,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>